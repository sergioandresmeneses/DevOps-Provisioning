##
#Vagrant file for supporting Multi-VMs
#
Vagrant.configure(2) do |config|
  config.hostmanager.enabled = true

  #VM image
  config.vm.box = "ubuntu/trusty64"
  #Control/Master node
  config.vm.define "control", primary: true do |h|
    h.vm.network "private_network", ip: "192.168.135.10"
    h.vm.provision :shell, :inline => <<'EOF'
if [ ! -f "/home/vagrant/.ssh/id_rsa" ]; then
  ssh-keygen -t rsa -N "" -f /home/vagrant/.ssh/id_rsa
fi
cp /home/vagrant/.ssh/id_rsa.pub /vagrant/control.pub

cat << 'SSHEOF' > /home/vagrant/.ssh/config
Host *
  StrictHostKeyChecking no
  UserKnownHostsFile=/dev/null
SSHEOF

chown -R vagrant:vagrant /home/vagrant/.ssh/
EOF
  end


##
#Define two VMs as nodes for the infrastructure.
#If you need to add others such as DBs or LBs, please copy-paste the blocks and assign a new name and ip address in the same segment
#
  config.vm.define "app01" do |h|
    h.vm.network "private_network", ip: "192.168.135.111"
    config.vm.network "forwarded_port", guest: 8080, host: 8080
    h.vm.provision :shell, inline: 'cat /vagrant/control.pub >> /home/vagrant/.ssh/authorized_keys'
  end

  config.vm.define "app02" do |h|
    h.vm.network "private_network", ip: "192.168.135.112"
    config.vm.network "forwarded_port", guest: 8080, host: 8081
    h.vm.provision :shell, inline: 'cat /vagrant/control.pub >> /home/vagrant/.ssh/authorized_keys'
  end

end
